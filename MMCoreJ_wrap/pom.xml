<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.micro-manager.mmcorej</groupId>
   <artifactId>MMCoreJ</artifactId>
   <packaging>jar</packaging>
   <version>10.1.1.0</version>
   <name>Micro-Manager Java Interface to MMCore</name>
   <description>Micro-Manager is open source software for control of automated/motorized microscopes.  This specific packages provides the Java interface to the device abstractino layer (MMCore) that is written in C++ with a C-interface</description>
   <url>http://micro-manager.org</url>

   <properties>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <developers>
      <developer>
         <id>nenada</id>
         <name>Nenad Amodaj</name>
         <organization>Luminous Point</organization>
      </developer>
      <developer>
         <id>marktsuchida</id>
         <name>Mark Tsuchida</name>
         <organization>University of Wisconsin, Madison</organization>
      </developer>
      <developer>
         <id>nicost</id>
         <name>Nico Stuurman</name>
         <organization>UCSF/HHMI</organization>
      </developer>
   </developers>

   <scm>
      <url>https://github.com/micro-manager/mmCoreAndDevices</url>
		<connection>scm:git:git://github.com/micro-manager/mmCoreAndDevices.git</connection>
		<developerConnection>scm:git:git@github.com:micro-manager/mmCoreAndDevices.git</developerConnection>
   </scm>

   <licenses>
      <license>
         <name>LGPL-2.1</name>
         <url>https://github.com/micro-manager/mmCoreAndDevices/blob/main/MMCoreJ_wrap/license.txt</url>
         <distribution>repo</distribution>
       </license>
  </licenses>

	<!--
	    Do not use maven to build MMCoreJ.jar.  
		The code below tries to make a valid jar in case someone 
		does this anyways.  In no way rely on this behavior
	-->	
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
                        <source>../../build/intermediates/Swig</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
		</plugins>
	</build>

   <distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
   </distributionManagement>

</project>

